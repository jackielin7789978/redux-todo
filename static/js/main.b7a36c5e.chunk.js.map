{"version":3,"sources":["features/todosSlice.js","features/TodoItem.js","features/Todo.js","utils.js","App.js","app/store.js","index.js"],"names":["todosSlice","createSlice","name","initialState","reducers","todoAdded","reducer","state","action","unshift","payload","prepare","id","taskname","isDone","isBeingEdited","todoDeleted","filter","todo","removeCompleted","todoToggled","targetTodo","find","todoEdited","actions","TodoItem","dispatch","useDispatch","useState","inputVal","setInputVal","isEditing","setIsEditing","className","onChange","e","target","checked","onPressEnter","value","size","onClick","Group","Button","disabled","Todo","items","currentFilter","setCurrentFilter","todos","useSelector","idToUse","length","menu","Item","filteredTodos","filterMenuClassName","offsetTop","overlay","type","DownOutlined","direction","style","width","item","icon","DeleteOutlined","placeholder","alert","map","App","configureStore","todosReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b7a36c5e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const todosSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: [],\r\n  reducers: {\r\n    todoAdded: {\r\n      reducer: (state, action) => {\r\n        state.unshift(action.payload)\r\n      },\r\n      prepare: (id, taskname) => {\r\n        return {\r\n          payload: {\r\n            id,\r\n            taskname,\r\n            isDone: false,\r\n            isBeingEdited: false\r\n          }\r\n        }\r\n      }\r\n    },\r\n    todoDeleted: (state, action) => {\r\n      const { id } = action.payload\r\n      return state.filter((todo) => todo.id !== id)\r\n    },\r\n    removeCompleted: (state) => {\r\n      return state.filter((todo) => todo.isDone === false)\r\n    },\r\n    todoToggled: (state, action) => {\r\n      const { id, isDone } = action.payload\r\n      const targetTodo = state.find((todo) => todo.id === id)\r\n      if (!targetTodo) return\r\n      targetTodo.isDone = isDone\r\n    },\r\n    todoEdited: (state, action) => {\r\n      const { id, taskname } = action.payload\r\n      const targetTodo = state.find((todo) => todo.id === id)\r\n      targetTodo.taskname = taskname\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  todoAdded,\r\n  todoDeleted,\r\n  todoToggled,\r\n  removeCompleted,\r\n  todoEdited\r\n} = todosSlice.actions\r\n\r\nexport default todosSlice.reducer\r\n","import './todo.css'\r\nimport { useState } from 'react'\r\nimport { Radio, Checkbox, Input } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { todoToggled, todoDeleted, todoEdited } from './todosSlice'\r\n\r\nexport default function TodoItem({ todo }) {\r\n  const dispatch = useDispatch()\r\n  const [inputVal, setInputVal] = useState(todo.taskname)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n\r\n  const handleToggle = (e) => {\r\n    dispatch(todoToggled({ id: todo.id, isDone: e.target.checked }))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(todoDeleted({ id: todo.id }))\r\n  }\r\n\r\n  const handelEdit = () => {\r\n    setIsEditing(false)\r\n    dispatch(todoEdited({ id: todo.id, taskname: inputVal }))\r\n  }\r\n\r\n  return (\r\n    <div className='todo-container'>\r\n      <Checkbox onChange={handleToggle} checked={todo.isDone} />\r\n      {isEditing ? (\r\n        <Input\r\n          className='taskname'\r\n          onPressEnter={handelEdit}\r\n          onChange={(e) => setInputVal(e.target.value)}\r\n          size='small'\r\n          value={inputVal}\r\n        />\r\n      ) : (\r\n        <div\r\n          className={todo.isDone ? 'taskname-done' : 'taskname'}\r\n          onClick={() => setIsEditing(true)}\r\n        >\r\n          {todo.taskname}\r\n        </div>\r\n      )}\r\n      <Radio.Group>\r\n        <Radio.Button disabled={todo.isDone} onClick={handleDelete}>\r\n          Delete\r\n        </Radio.Button>\r\n      </Radio.Group>\r\n    </div>\r\n  )\r\n}\r\n","import './todo.css'\r\nimport { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { todoAdded, removeCompleted } from './todosSlice'\r\nimport { Affix, Dropdown, Menu, Input, Space, Button } from 'antd'\r\nimport { DeleteOutlined, DownOutlined } from '@ant-design/icons'\r\nimport TodoItem from './TodoItem'\r\nimport { hasCompleted } from '../utils'\r\n\r\nexport default function Todo() {\r\n  const [inputVal, setInputVal] = useState('')\r\n  const [currentFilter, setCurrentFilter] = useState('Show All')\r\n  const todos = useSelector((state) => state.todos)\r\n  const dispatch = useDispatch()\r\n\r\n  const idToUse = todos.length ? todos[0].id + 1 : 1\r\n\r\n  const onSubmitTodo = () => {\r\n    if (!inputVal) return alert('Please enter a taskname')\r\n    dispatch(todoAdded(idToUse, inputVal))\r\n    setInputVal('')\r\n  }\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='1' onClick={() => setCurrentFilter('Show All')}>\r\n        Show All\r\n      </Menu.Item>\r\n      <Menu.Item key='2' onClick={() => setCurrentFilter('Show Active')}>\r\n        Show Active\r\n      </Menu.Item>\r\n      <Menu.Item key='3' onClick={() => setCurrentFilter('Show Completed')}>\r\n        Show Completed\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  const filteredTodos = todos.filter((todo) => {\r\n    switch (currentFilter) {\r\n      case 'Show Active':\r\n        return todo.isDone === false\r\n      case 'Show Completed':\r\n        return todo.isDone === true\r\n      default:\r\n        return todo\r\n    }\r\n  })\r\n\r\n  const filterMenuClassName = todos.length\r\n    ? 'filter-menu'\r\n    : 'filter-menu-hidden'\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Affix offsetTop={30} className={filterMenuClassName}>\r\n        <Dropdown overlay={menu}>\r\n          <Button type='primary'>\r\n            {currentFilter} <DownOutlined />\r\n          </Button>\r\n        </Dropdown>\r\n      </Affix>\r\n      <Space direction='vertical' size='large' style={{ width: '100%' }}>\r\n        <div>\r\n          <div className='title'>\r\n            <div>TO DO</div>\r\n            {hasCompleted(todos) && (\r\n              <Button\r\n                type='ghost'\r\n                icon={<DeleteOutlined />}\r\n                onClick={() => dispatch(removeCompleted())}\r\n              >\r\n                Remove Completed\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Input\r\n            placeholder='Enter a task...'\r\n            value={inputVal}\r\n            onChange={(e) => setInputVal(e.target.value)}\r\n            onPressEnter={onSubmitTodo}\r\n          />\r\n        </div>\r\n        <Space\r\n          className='todo-table'\r\n          direction='vertical'\r\n          size='middle'\r\n          style={{ width: '100%' }}\r\n        >\r\n          {filteredTodos.map((todo) => (\r\n            <TodoItem key={todo.id} todo={todo} />\r\n          ))}\r\n        </Space>\r\n      </Space>\r\n    </div>\r\n  )\r\n}\r\n","export const hasCompleted = (items) => {\r\n  if (items.find((item) => item.isDone === true)) return true\r\n  return false\r\n}\r\n","import './App.less'\r\nimport Todo from './features/Todo'\r\n\r\nexport default function App() {\r\n  return <Todo />\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport todosReducer from '../features/todosSlice'\r\n\r\nexport default configureStore({\r\n  reducer: { todos: todosReducer }\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}